# Backend (Spring Boot) - 실시간 채팅 기능 요구사항

## 1. 실시간 통신 서버
- WebSocket 서버 구현 (Spring WebSocket 또는 STOMP over WebSocket)
- 클라이언트 연결 관리 및 메시지 라우팅

## 2. 데이터베이스 모델링 및 연동
- **User (사용자) 테이블:** 기존 사용자 정보 활용
- **Counselor (상담원) 테이블:** 상담원 정보 관리
- **ChatRoom (채팅방) 테이블:**
    - 유저-상담원 1:1 채팅방 (상담 요청 시 생성)
    - 유저-유저 그룹 채팅방 (사용자 생성 가능)
    - 채팅방 ID, 참여자 목록, 생성 시간 등
- **ChatMessage (채팅 메시지) 테이블:**
    - 메시지 ID, 채팅방 ID, 발신자 ID, 메시지 내용, 전송 시간 등
- 데이터베이스 연동 (JPA/Hibernate 등)

## 3. API 및 비즈니스 로직
- **인증/권한 부여:**
    - 사용자 및 상담원 로그인/인증 (JWT 등 활용)
    - 채팅방 접근 권한 확인
- **채팅방 관리 API:**
    - 유저-상담원 채팅방 생성/조회 (상담 요청 시)
    - 유저-유저 채팅방 생성/참여/나가기/조회
    - 특정 사용자의 참여 채팅방 목록 조회
- **메시지 처리 로직:**
    - 메시지 수신 및 데이터베이스 저장
    - 특정 채팅방 참여자에게 메시지 브로드캐스팅
    - 메시지 히스토리 조회
- **상담원 연결 로직 (유저-상담원 채팅):**
    - 상담원 상태 관리 (온라인/오프라인, 상담 가능 여부)
    - 상담 요청 시 사용 가능한 상담원에게 연결 (큐잉 시스템 고려)

## 4. 보안
- WebSocket 연결 보안 (TLS/SSL)
- 메시지 내용 암호화 (필요시)

## 5. 로깅 및 에러 처리
- 채팅 관련 이벤트 및 에러 로깅
- 예외 상황에 대한 적절한 에러 응답
