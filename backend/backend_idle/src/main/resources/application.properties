# application.properties
spring.datasource.url=jdbc:postgresql://aws-0-ap-northeast-2.pooler.supabase.com:6543/postgres
spring.datasource.username=postgres.dosrhksmbvwjwardblqm
spring.datasource.password=idleReactDBpwd!1
spring.datasource.driver-class-name=org.postgresql.Driver

spring.main.allow-bean-definition-overriding=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# HikariCP settingss
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# ÃªÂ²Â°Ã¬Â Â API portone api key
portone.api.key=6242610400536318
portone.api.secret=5X7zrxpdCjx3bUde6eMlSPHITZwxaTTdg0na2cLQK8H7NNs4m3EjTPiDMvQqiqXfcE5Vhas18I9dTO1n

# JWT secret key 
jwt.secret=mySuperSecretKeyThatIsAtLeast32BytesLong!!
jwt.access-ttl=15m
jwt.refresh-ttl=14d
jwt.issuer=idle-api

# ìë¡ë ë£¨í¸/ìë°í ê²½ë¡ (ìëê²½ë¡)
app.upload.root-dir=./uploads/
app.upload.avatar-dir=${app.upload.root-dir}avatars/

# ì ì  ë¦¬ìì¤ ë£¨í¸ì ë¡ì»¬ í´ë ì¶ê°
spring.web.resources.static-locations=classpath:/static/,file:${app.upload.root-dir}

# /uploads/** ë¡ ì ê·¼íëë¡ í¨í´ ì§ì 
spring.mvc.static-path-pattern=/uploads/**

# === ìë¡ë ì©ë ì í(ìíëëë¡) ===
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Mail setting
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=idleverify@gmail.com
spring.mail.password=jmpn brlh bfen uwjb
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2
# ===== Google =====
spring.security.oauth2.client.registration.google.client-id=460030575434-rjiu30hvm4p8evkcdd6k0niu93ve13t0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# 운영시에 수정 필요
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# ===== Naver =====
spring.security.oauth2.client.registration.naver.client-id=lRunlSMYQe4clv4Q6y1e
spring.security.oauth2.client.registration.naver.client-secret=CAddqW93K0
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email,nickname
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# ===== Kakao =====
spring.security.oauth2.client.registration.kakao.client-id=0700de004d54cc8e96d83b9617ea3e96
spring.security.oauth2.client.registration.kakao.client-secret=WXDE7Ohl2JfSgwlt441CFt6waJieECP2
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Frontend redirect target (dev)
frontend.base-url=http://localhost:3000
# 배포 시:
# frontend.base-url=https://your-frontend-domain.com

logging.level.org.springframework.security=DEBUG


