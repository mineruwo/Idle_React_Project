# application.properties
spring.datasource.url=jdbc:postgresql://aws-0-ap-northeast-2.pooler.supabase.com:6543/postgres
spring.datasource.username=postgres.dosrhksmbvwjwardblqm
spring.datasource.password=idleReactDBpwd!1
spring.datasource.driver-class-name=org.postgresql.Driver

spring.main.allow-bean-definition-overriding=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# HikariCP settingss
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# ê²°ì  API portone api key
portone.api.key=6242610400536318
portone.api.secret=5X7zrxpdCjx3bUde6eMlSPHITZwxaTTdg0na2cLQK8H7NNs4m3EjTPiDMvQqiqXfcE5Vhas18I9dTO1n

# JWT secret key 
jwt.secret=mySuperSecretKeyThatIsAtLeast32BytesLong!!

# 업로드 루트/아바타 경로 (상대경로)
app.upload.root-dir=./uploads/
app.upload.avatar-dir=${app.upload.root-dir}avatars/

# 정적 리소스 루트에 로컬 폴더 추가
spring.web.resources.static-locations=classpath:/static/,file:${app.upload.root-dir}

# /uploads/** 로 접근하도록 패턴 지정
spring.mvc.static-path-pattern=/uploads/**

# === 업로드 용량 제한(원하는대로) ===
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Mail setting
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=idleverify@gmail.com
spring.mail.password=jmpn brlh bfen uwjb
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true





